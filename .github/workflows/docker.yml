name: Build and deploy

on:
  push:
    branches:
      - master
    tags:
      - v*

env:
  SERVER_IMAGE_NAME: itsmatttobin/uocg-server
  CLIENT_IMAGE_NAME: itsmatttobin/uocg-client

jobs:
  build-push-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Build image
        run: docker build -t $SERVER_IMAGE_NAME .
        working-directory: ./server

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo SERVER_IMAGE_NAME=$SERVER_IMAGE_NAME
          echo VERSION=$VERSION

          docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_NAME:$VERSION
          docker push $SERVER_IMAGE_NAME:$VERSION
        working-directory: ./server

  build-push-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Log into Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Build image
        run: docker build -t $CLIENT_IMAGE_NAME .
        working-directory: ./client

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo CLIENT_IMAGE_NAME=$CLIENT_IMAGE_NAME
          echo VERSION=$VERSION

          docker tag $CLIENT_IMAGE_NAME $CLIENT_IMAGE_NAME:$VERSION
          docker push $CLIENT_IMAGE_NAME:$VERSION
        working-directory: ./client

  deploy-latest:
    runs-on: ubuntu-latest
    needs: [build-push-server, build-push-client]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.UOCG_HOST }}
          username: ${{ secrets.UOCG_USER }}
          key: ${{ secrets.UOCG_KEY }}
          passphrase: ${{ secrets.UOCG_PASSPHRASE }}
          script: |
            cd uocg
            docker-compose down
            docker-compose pull
            docker-compose up -d
